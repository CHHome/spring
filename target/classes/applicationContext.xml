<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<context:component-scan base-package="demo.service" />
	<context:component-scan base-package="demo.controller" />
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<!-- 设置视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置数据源 -->
	<bean name="dSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://127.0.0.1/mydb?characterEncoding=utf-8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<!-- 连接池设置 -->
		<!-- 最大的数据库连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 最大的空闲连接数,超出此数量,连接池将会结束相应连接 -->
		<property name="maxIdle" value="10" />
		<!-- 最小的空闲连接数,保持的最少的链接数量 -->
		<property name="minIdle" value="5" />
		<!-- 连接的最长等待时间 -->
		<property name="maxWait" value="2000" />
	</bean>

	<bean name="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dSource" />

		<!-- <property name="configLocation" value="configuration.xml" /> -->
		<!-- 加载相关的关系映射文件 -->
		<property name="mapperLocations" value="classpath:demo/mapper/*.xml" />
		<!-- 扫描实体类的包,为每个实体类注册一个别名,别名为类的名字 -->
		<property name="typeAliasesPackage" value="demo.model" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 设置实例化接口对象的包 -->
		<property name="basePackage" value="demo.mapper" />
	</bean>
	<!-- 启用事务 -->
	<!-- 定义一个事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dSource" />
	</bean>
	<!-- 定义AOP的事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 设置事务的传播方式 -->
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="login*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="count*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- 定义AOP -->
	<aop:config>
		<!-- 第一个星号:方法的返回类型,可以指定类型,如:int void等,*号表示任意类型 demo.service..*.*(..)——demo.service表示包,demo.service..的..表示任意包路径 
			第二个星号表示类的名字,可指定具体类名,如UserMapper,*号表示任意名字, 第三个星号表示方法名称,可指定具体方法名称,如add,delete等,*号表示任意方法名称 
			圆括号里是方法的参数,可指定具体参数如:(int,String), .. 表示任意参数 -->
		<aop:pointcut expression="execution(* demo.service..*.*(..))"
			id="mypoint" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="mypoint" />
	</aop:config>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传文件总的大小限制 -->
		<property name="maxUploadSize" value="10000000" />
		<!-- 设置每个上传文件的大小限制 -->
		<property name="maxUploadSizePerFile" value="10000000" />
	</bean>

</beans>
